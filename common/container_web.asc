== Outils web de gestion des containers

=== Installation de Yacht

Yacht est un outil d'administration de vos instances docker sous forme de site web. Yacht est très facile d'utilisation mais manque de possibilités du moins dans la version actuelle. Si vous souhaitez administrer de façon plus avancée vos instances docker, il est conseillé d'utiliser Portainer.

Yacht s’installe comme un conteneur docker pour simplifier son déploiement.

Pour la création du site web, il faut suivre les étapes suivantes:

. Allez dans ISPConfig dans la rubrique `DNS`, sélectionnez le menu `Zones`, Sélectionnez votre Zone, Allez dans l'onglet `Records`.
.. Cliquez sur `A` et saisissez:
** `Hostname:` <- Tapez `yacht`
** `IP-Address:` <- Double cliquez et sélectionnez l'adresse IP de votre serveur
.. Cliquez sur `Save`
. Créer un <<#subdomain-site, sub-domain (vhost)>> dans le configurateur de sites.
.. Lui donner le nom `yacht`.
.. Le faire pointer vers le web folder `yacht`.
.. Sélectionnez `None` dans `Auto-subdomain`
.. Activer `let’s encrypt SSL`
.. Activer `PHP-FPM` pour PHP
.. Dans l'onglet Redirect Cochez la case `Rewrite HTTP to HTTPS`
.. Laisser le reste par défaut.
.. Dans l’onglet Options:
.. Dans la boite `Apache Directives:` saisir le texte suivant:
+
[source,apache]
----
<Proxy *>
Order deny,allow
Allow from all
</Proxy>

ProxyRequests Off
ProxyPass /stats !
ProxyPass /.well-known/acme-challenge !

# yacht httpserver
#

SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1
ProxyPreserveHost    On

ProxyPass / http://localhost:8061/
ProxyPassReverse / http://localhost:8061/

RedirectMatch ^/$ https://yacht.example.com <1>
----
<1> remplacer `example.com` par votre nom de domaine
. Puis sur votre serveur, <<#root_login, Loguez vous comme root sur le serveur>>
. Tapez:
+
[source,bash]
----
docker volume create yacht_data
docker run -d -p 8061:8000 --name=yacht -v /var/run/docker.sock:/var/run/docker.sock --restart=always -v yacht_data:/config selfhostedpro/yacht
----
. Ouvrez un navigateur et pointez sur http://yacht.example.com
. L'utilisateur par défaut est login: `admin@yacht.local` et mot de passe: `pass`.
. Une fois loggué, Cliquez sur l'utilisateur en haut à droite et `user`.
. Cliquez sur `change password`
. Modifier votre Email de login et saisissez un nouveau mot de passe.
. Cliquez ensuite sur `Templates` dans la barre vertical de gauche puis sur `New templates`
. Copiez la suggestion de template proposée.
. Saisissez un titre `Yacht` dans le champ `Title` puis collez l'URL du json dans le champ `URL`
. Cliquez sur Submit.
. Allez dans `Templates` -> `View Templates`.
. cliquez sur `Yacht`; vous avez maintenant accès à une foule de templates.
. Vous pouvez maintenant administrer vos machines docker. Référez vous à la documentation de https://yacht.sh/Pages/dashboard/[Yacht] pour installer de nouvelles machines docker

[#yacht_container_updt]
=== Upgrade d'un container dans Yacht

Plutôt que d’effectuer des mises à jour automatiques avec Watchtower, vous préférerez mettre à jour manuellement avec Yacht.

Appliquez la procédure suivante:

. Ouvrez un navigateur et pointez sur http://yacht.example.com
. Logguez vous en tant qu'`admin`
. Allez  dans l'onglet `Applications`
. Cliquez sur le bouton `Updates`

=== Upgrade de Yacht

Rien a faire pour la mise à jour si vous utilisez `Watchtower`
Vous pouvez aussi appliquer la procédure de mise à jour des <<#port_container_updt, containers à l'aide de `Portainer`>>

Sinon, effectuez les opérations suivantes:

. <<#root_login, Loguez vous comme root sur le serveur>>
. Allez dans le répertoire de root
. Mettez à jour le docker de Yacht. Tapez:
+
[source,bash]
----
docker pull selfhostedpro/yacht
docker stop yacht
docker rm yacht
docker run -d -p 8061:8000 --name=yacht -v /var/run/docker.sock:/var/run/docker.sock --restart=always -v yacht_data:/config selfhostedpro/yacht
----

=== Installation de Portainer

Portainer est un outil d'administration de vos instances docker sous forme de site web. Portainer est plus complexe à utiliser que Yacht, mais offre cependant beaucoup plus de possibilités.

Portainer s’installe comme un conteneur docker pour simplifier son déploiement. Portainer gère une bonne partie des éléments de docker : conteneurs, images, volumes, réseaux, utilisateurs

Pour la création du site web, il faut suivre les étapes suivantes:

. Allez dans ISPConfig dans la rubrique `DNS`, sélectionnez le menu `Zones`, Sélectionnez votre Zone, Allez dans l'onglet `Records`.
.. Cliquez sur `A` et saisissez:
** `Hostname:` <- Tapez `portainer`
** `IP-Address:` <- Double cliquez et sélectionnez l'adresse IP de votre serveur
.. Cliquez sur `Save`
. Créer un <<#subdomain-site, sub-domain (vhost)>> dans le configurateur de sites.
.. Lui donner le nom `portainer`.
.. Le faire pointer vers le web folder `portainer`.
.. Sélectionnez `None` dans `Auto-subdomain`
.. Activer `let’s encrypt SSL`
.. Activer `PHP-FPM` pour PHP
.. Dans l'onglet Redirect Cochez la case `Rewrite HTTP to HTTPS`
.. Laisser le reste par défaut.
.. Dans l’onglet Options:
.. Dans la boite `Apache Directives:` saisir le texte suivant:
+
[source,apache]
----
<Proxy *>
Order deny,allow
Allow from all
</Proxy>

ProxyRequests Off
ProxyPass /stats !
ProxyPass /.well-known/acme-challenge !

# portainer httpserver
#

SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1
ProxyPreserveHost    On

ProxyPass / http://localhost:9050/
ProxyPassReverse / http://localhost:9050/

RedirectMatch ^/$ https://portainer.example.com <1>
----
<1> remplacer `example.com` par votre nom de domaine
. Puis sur votre serveur, <<#root_login, Loguez vous comme root sur le serveur>>
. Tapez:
+
[source,bash]
----
docker volume create portainer_data
docker run -d -p 9050:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce
----
. Ouvrez un navigateur et pointez sur http://portainer.example.com
. Créez votre utilisateur de `admin` avec un mot de passe sécurisé.
. Ajoutez un endpoint `Local`
. Vous pouvez maintenant administrer vos machines docker. Référez vous à la documentation de https://documentation.portainer.io/v2.0/stacks/create/[portainer] pour installer de nouvelles machines docker

Portainer offre la possibilité d'installer des templates par défaut. Vous pouvez soit garder le repository par défault : `https://raw.githubusercontent.com/portainer/templates/master/templates-2.0.json` ou utiliser un autre repository comme: `https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Template/template.json`:

. allez sur votre site web portainer.
. puis dans le menu Settings
. Dans la zone `App Templates` saisissez le repository de votre choix dans le champ `URL`
. Cliquez sur `Save Settings`
. retournez dans le menu `App Templates`; vos nouveau templates sont maintenant affichés.

[#port_container_updt]
=== Upgrade d'un container dans Portainer

Plutôt que d’effectuer des mises à jour automatiques avec Watchtower, vous préférerez mettre à jour manuellement avec Portainer.

Appliquez la procédure suivante:

. Ouvrez un navigateur et pointez sur http://portainer.example.com
. Logguez vous en tant qu' `admin`
. Allez  dans l'onglet `Containers`
. Double-cliquez sur le container à mettre à jour
. Dans le nouvel écran `Container details` cliquez sur l'icone `recreate`
. Sélectionnez `Pull latest image` et cliquez `recreate`

=== Upgrade de Portainer

Rien a faire pour la mise à jour si vous utilisez `Watchtower`
Vous pouvez aussi appliquer la procédure de mise à jour des containers à l'aide de <<#yacht_container_updt, `Yacht`>>

Sinon, effectuez les opérations suivantes:

. <<#root_login, Loguez vous comme root sur le serveur>>
. Allez dans le répertoire de root
. Mettez à jour le docker de Yacht. Tapez:
+
[source,bash]
----
docker pull portainer/portainer-ce
docker stop portainer
docker rm portainer
docker run -d -p 9050:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce
----

