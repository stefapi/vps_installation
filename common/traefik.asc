== Installation de Traefik

Le logiciel `Traefik` est une technologie de Reverse Proxy qui est un intermédiaire de communication, entre un réseau public et un réseau privé, le nôtre par exemple. C’est sur ce réseau privé que l’on trouvera toutes les applications qui ne sont pas accessibles depuis l’extérieur pour des raisons de sécurité ou de découpe en microservices.

Traefik permet donc de faire de la “configuration discovery” via plusieurs fournisseurs de services et load balancer pour HTTP et TCP. Il offre également d’autres fonctionnalités comme le support de Let’s Encrypt, des middlewares et la possibilité de monitorer facilement des services.


=== Installation de Traefik

L'installation de Traefik est simple.

Il faut suivre les étapes suivantes:

. <<#root_login, Loguez vous comme root sur le serveur>>
. Assurez vous tout d'abord qu'un serveur web n'est pas actif sur le port 80 de votre Machine. C'est Traefik qui en prendra la place et servira les pages nécessaires. Il vous faudra soit désactiver tout serveur Apache local soit vérifier que ce serveur apache n'utilise pas le port 80.
. Pour désactiver lighttpd ou apache2. Tapez:
+
[source,bash]
----
service lighttpd stop
service apache stop
----
. Ensuite installez Traefik. Tapez:
+
[source,bash]
----
docker run -d --name traefik --restart=always -v /var/run/docker.sock:/var/run/docker.sock -p80:80 -p8080:8080 traefik <1>
----
<1> Si votre serveur Traefik est disponible sur internet, il ne faudra pas exposer le port 8080

=== Configuration de Traefik pour une utilisation avec Pi-Hole

Pi-Hole se configure avec un serveur lighttpd sur votre machine en utilisant le port 80. Il est possible d'utiliser Pi-Hole et Traefik en même temps pour servir plusieurs site webs sur la même machine

Appliquer la procédure suivante:

. <<#root_login, Loguez vous comme root sur le serveur>>
. Reconfigurez Pi Hole pour utiliser un autre port que le port 80 sur la machine local. Pour cela éditez le fichier `external.conf`. Tapez:
+
[source,bash]
----
vi /etc/lighttpd/external.conf
----
. Dans le fichier insèrez:
+
[source,bash]
----
server.port:=3080
----
. Sauvegardez et redémarrez lighttpd. Tapez:
+
[source,bash]
----
service lighttpd restart
----
. Vérifier que lighttpd n'est plus accessible dans votre navigateur sur le port 80 mais sur le port 3080.
. Nous allons utiliser docker compose pour lancer traefik avec sa configuration
. Editez un fichier de configuration compose.yml. Tapez:
+
[source,bash]
----
mkdir /opt/traefik
vi /opt/traefik/compose.yml
----
. Dans ce fichier, tapez le contenu suivant:
+
[source,yaml]
----
services:
  traefik:
    image: "traefik:latest"
    container_name: "traefik"
    restart: unless-stopped
    ports:
      - "80:80"
    #  - "8080:8080"
# Note: when used in docker-compose.yml all dollar signs in the hash need to be doubled for escaping.
# To create a user:password pair, the following command can be used:
# echo $(htpasswd -nb admin password) | sed -e s/\\$/\\$\\$/g
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mydashboard.rule=Host(`traefik.example.com`)" <1>
      - "traefik.http.routers.mydashboard.service=mydashboardsvc"
      - "traefik.http.services.mydashboardsvc.loadbalancer.server.port=8080"
      - "traefik.http.routers.mydashboard.service=api@internal" <3>
      - "traefik.http.routers.mydashboard.middlewares=myauth" <3>
      - "traefik.http.middlewares.myauth.basicauth.users=admin:$$apr1$$k1J8tnlH$$/b4Y7O.gk1OO/sOhIVlrr0" <3>

    command:
      - --configFile=/etc/traefik/traefik.yaml
      - --log.level=ERROR
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    configs:
      - source: traefik-config
        target: /etc/traefik/traefik.yaml
      - source: dynamic-yml
        target: /etc/traefik/dynamic_conf.yaml
    network_mode: bridge

configs:
  traefik-config:
    content: |
      log:
        level: TRACE
      api:
        dashboard: true <2>
        insecure: true <2>
      entryPoints:
        web:
          address: ":80"
      providers:
        docker:
          watch: true
          exposedbydefault: false
        file:
          filename: /etc/traefik/dynamic_conf.yaml
          watch: true
  dynamic-yml:
    content: |
      http:
        routers:
          apache:
            rule: "Host(`example.com`)" <1>
            service: apache
            entrypoints:
              - web

        services:
          apache:
            loadBalancer:
              servers:
                - url: "http://example.com:3080" <1>
----
<1> Remplacez example.com par le nom de domaine de votre serveur.
<2> Si votre serveur Traefik est directement disponible sur internet, il ne faut pas activer ces deux commandes pour garder une bonne sécurité de vos services.
<3> Ces trois lignes permettent d'activer une authentification lorsque vous accéder au dashboard. Il faudra générer un mot de passe selon la commande mise en commentaire.
. Crééez une entrée DNS A pour le sous-domaine `traefik`
. Relancez Traefik avec la nouvelle configuration:
+
[source,bash]
----
docker compose up -d
----
. Pour superviser vos routes et services Traefik, vous pouvez vous connecter sur `http://traefik.example.com` pour voir la configuration en cours. (example.com est à remplacer pour le nom de votre machine).
. Enfin pour tous les services que vous lancez avec docker, vous pouvez ajouter sur la ligne de commande de lancement (juste après la commande docker) les éléments suivants:
+
[source,bash]
----
-l 'traefik.http.routers.<route>.rule=Host(`<route>.rasphome.local`)' -l "traefik.enable=true" -l "traefik.http.routers.<route>.service=<service>" -l "traefik.http.services.<service>.loadbalancer.server.port=<port>" <1>
----
<1> remplacer <route> par le nom de votre container lancé (en un seul mot) , <service> par le nom de votre service et enfin <port> par le numéro de port dans le container.

=== Upgrade de Traefik

Rien a faire pour la mise à jour si vous utilisez `Watchtower`
Vous pouvez aussi appliquer la procédure de mise à jour des containers à l'aide de <<#port_container_updt, `Portainer`>> ou à l'aide <<#yacht_container_updt, `Yacht`>>

Sinon, effectuez les opérations suivantes:

. <<#root_login, Loguez vous comme root sur le serveur>>
. Allez dans le répertoire de root
. Mettez à jour le docker de Traefik. Tapez:
+
[source,bash]
----
cd /opt/traefik
docker compose down
docker compose up -d
----
<1> Si votre serveur Traefik est disponible sur internet, il ne faudra pas exposer le port 8080
