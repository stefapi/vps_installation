== Installation d'un repository pour `/etc`

Si vous souhaitez gérer en gestion de configuration le contenu de votre répertoire `/etc`, installez `etckeeper`.

Cette installation est optionnelle. Elle permet de garder dans un repository GIT toutes les modifications qui sont effectuées dans /etc soit par vous soit au moment de l'installation de paquets.

. <<#root_login, Loguez vous comme root sur le serveur>>
. Tapez :
+
[source,bash]
----
apt update
apt install etckeeper
----
. Vous pouvez créer un repository privé dans le cloud pour stocker votre configuration de serveur (autre serveur privé de confiance ou repository privé  `Gitlab` ou `Github`).
. Ajoutez ce repository distant. Pour `Gitlab` et `Github`, une fois le repository créé, demandez l'affichage de la commande git pour une communication en ssh. Tapez ensuite sur votre serveur :
+
[source,bash]
----
cd /etc
git remote add origin git@github.com:username/etc_keeper.git <1>
----
<1> remplacer l'url par celle qui correspond au chemin de votre repository
. modifier le fichier de configuration de `etckeeper`. tapez:
+
[source,bash]
----
vi /etc/etckeeper/etckeeper.conf
----
. Recherchez la ligne contenant `PUSH_REMOTE` et ajoutez y tous les repositories distant sur lesquels vous souhaitez pousser les modifications. Pour notre configuration, mettez:
+
[source,bash]
----
PUSH_REMOTE="origin"
----
. Pour éviter des demandes de mot de passe de la part de `github` ou `gitlab`, il est nécessaire de déclarer une clé publique sur leur site. Créez une clé sur votre serveur pour l'utilisateur root:
.. Créer un répertoire `/root/.ssh` s'il n'existe pas. tapez :
+
[source,bash]
----
cd /root
mkdir -p .ssh
----
.. Allez dans le répertoire. Tapez :
+
[source,bash]
----
cd /root/.ssh
----
.. Générez vous clés. Tapez :
+
[source,bash]
----
ssh-keygen -t rsa
----
.. Un ensemble de questions apparaît. Si un texte vous explique que le fichier existe déjà, arrêtez la procédure. Cela signifie que vous avez déjà créé une clé et que vous risquez de perdre la connexion à d'autres serveurs si vous en générez une nouvelle. Sinon, appuyez sur Entrée à chaque fois pour accepter les valeurs par défaut.
.. Allez sur `gitlab` ou `github` dans la rubriques "settings" et le menu "SSH keys". Ajoutez la clé que vous aurez affiché avec la commande suivante:
+
[source,bash]
----
cat /root/.ssh/id_rsa.pub
----
. Effectuez un premier push. Tapez:
+
[source,bash]
----
cd /etc
git push -u origin master
----
. aucun mot de passe ne doit vous être demandé. Si ce n'est pas le cas, re-vérifier les étapes précédentes.
. Lancer `etckeeper`. Tapez:
+
[source,bash]
----
etckeeper commit
----
. Tout le contenu de `/etc` est poussé sur le repository. Saisissez un commentaire.
. C'est fait !

