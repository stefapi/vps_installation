== Création de l’autoconfig pour Thunderbird et Android

La procédure est utilisé par Thunderbird et Android pour configurer automatiquement les paramètres de la messagerie.

Appliquez la procédure suivante:

. Créer un <<#subdomain-site, sub-domain (vhost)>> dans le configurateur de sites.
.. Lui donner le nom `autoconfig`.
.. Le faire pointer vers le web folder `autoconfig`.
.. Mettre dans `Auto-SubDomain` la valeur `None`
.. Sélectionnez `None` dans `Auto-subdomain`
.. Activer `let’s encrypt SSL`
.. Activer `PHP-FPM` pour PHP
.. Dans l'onglet Redirect Cochez la case `Rewrite HTTP to HTTPS`
.. Laisser le reste par défaut.
.. Dans l’onglet Options:
.. Dans la boite `Apache Directives:` saisir le texte suivant:
+
[source,apache]
----
<FilesMatch "^.+\.xml$">
        SetHandler "proxy:unix:/run/php/php8.2-fpm.sock|fcgi://localhost" <1>
</FilesMatch>

<FilesMatch "^.+\.json$">
        SetHandler "proxy:unix:/run/php/php8.2-fpm.sock|fcgi://localhost" <1>
</FilesMatch>

AddHandler application/x-httpd-php .php .xml .json

<IfModule mod_speling.c>
    CheckCaseOnly on
    CheckSpelling on
</IfModule>
----
<1> Mettez bien ici la version de PHP que vous avez choisi. Dans l'exemple c'est la 8.2
.. Sauver.
. <<#root_login, Loguez vous comme root sur le serveur>>
. Editez le fichier le fichier `/etc/php/8.2/fpm/pool.d/www.conf` (mettez votre version choisie à la place de 8.2).
. Dans le fichier, recherchez `security.limit_extension` et ajoutez:
[source]
----
security.limit_extensions = .php .php3 .php4 .php5 .php7 .xml .json
----
. Dans le répertoire `/var/www/autoconfig.<example.com>/autoconfig/` créer un répertoire mail. Lui donner les permissions 755 et affecter les mêmes possesseurs que pour autres fichiers du répertoire. Tapez:
+
[source,bash]
----
cd /var/www/autoconfig.example.com <2>
mkdir -p autoconfig/mail 
chmod 755 autoconfig/mail
chown web1:client0 autoconfig/mail <1>
----
<1> remplacer web1:client0 par les permissions du répertoire `/var/www/autoconfig.example.com`
<2> remplacez `example.com` par votre nom de domaine
. A l’intérieur de ce répertoire, Editez un fichier `config-v1.1.xml`. Tapez:
+
[source,bash]
----
vi autoconfig/mail/config-v1.1.xml
----
. Y coller:
+
[source,xml]
----
<?php
header('Content-Type: application/xml');
?>
<?xml version="1.0" encoding="UTF-8"?>

<clientConfig version="1.1">
 <emailProvider id="example.com"> <1>
   <domain>example.com</domain>  <1>
   <displayName>Example Mail</displayName> <2>
   <displayShortName>Example</displayShortName> <3>
   <incomingServer type="imap">
     <hostname>mail.example.com</hostname> <1>
     <port>993</port>
     <socketType>SSL</socketType>
     <authentication>password-cleartext</authentication>
     <username>%EMAILADDRESS%</username>
   </incomingServer>
   <incomingServer type="pop3">
     <hostname>mail.example.com</hostname> <1>
     <port>995</port>
     <socketType>SSL</socketType>
     <authentication>password-cleartext</authentication>
     <username>%EMAILADDRESS%</username>
   </incomingServer>
   <outgoingServer type="smtp">
     <hostname>mail.example.com</hostname> <1>
     <port>465</port>
     <socketType>SSL</socketType>
     <authentication>password-cleartext</authentication>
     <username>%EMAILADDRESS%</username>
   </outgoingServer>
   <outgoingServer type="smtp">
     <hostname>mail.example.com</hostname> <1>
     <port>587</port>
     <socketType>STARTTLS</socketType>
     <authentication>password-cleartext</authentication>
     <username>%EMAILADDRESS%</username>
   </outgoingServer>
 </emailProvider>
</clientConfig>

----
<1> mettre à la place de `example.com` votre nom de domaine
<2> mettre ici votre libellé long pour votre nom de messagerie
<3> mettre ici un libellé court pour votre nom de messagerie
. Donner la permission en lecture seule et affecter les groupes d'appartenance. Tapez:
+
[source,bash]
----
chmod 644 autoconfig/mail/config-v1.1.xml
chown web1:client0 autoconfig/mail/config-v1.1.xml <1>
----
<1> remplacer web1:client0 par les permissions du répertoire `/var/www/autoconfig.example.com`
