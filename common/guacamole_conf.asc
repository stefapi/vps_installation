== Installation d'un serveur de bureau à distance Guacamole

Apache Guacamole est un logiciel opensource et une application web de bureau à distance qui vous permet d'accéder à vos machines de bureau par le biais d'un navigateur web. Il s'agit d'une appli web html5 qui prend en charge des protocoles standard comme VNC, RDP et SSH. Vous n'avez pas besoin d'installer et d'utiliser des logiciels ou des plugins sur le serveur. Avec Guacamole, vous pouvez facilement passer d'un bureau d'une machine à l'autre avec le même navigateur

=== Création du site web de Guacamole

Appliquez les opérations suivantes Dans ISPConfig:

. Allez dans la rubrique `DNS`, sélectionnez le menu `Zones`, Sélectionnez votre Zone, Allez dans l'onglet `Records`.
.. Cliquez sur `A` et saisissez:
** `Hostname:` <- Tapez `guacamole`
** `IP-Address:` <- Double cliquez et sélectionnez l'adresse IP de votre serveur
.. Cliquez sur `Save`
. Créer un <<#subdomain-site, sub-domain (vhost)>> dans le configurateur de sites.
.. Lui donner le nom `guacamole`.
.. Le faire pointer vers le web folder `guacamole`.
.. Sélectionnez `None` dans `Auto-subdomain`
.. Activer `let’s encrypt SSL`
.. Activer `PHP-FPM` pour PHP
.. Dans l'onglet Redirect Cochez la case `Rewrite HTTP to HTTPS`
.. Laisser le reste par défaut.
.. Dans l’onglet Options:
.. Dans la boite `Apache Directives:` saisir le texte suivant:
+
[source,apache]
----
<Proxy *>
Order deny,allow
Allow from all
</Proxy>

ProxyRequests Off
ProxyPass /stats !
ProxyPass /.well-known/acme-challenge !

# guacamole httpserver
#

SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1
ProxyPreserveHost    On

ProxyPass /guacamole http://localhost:8085/guacamole
ProxyPassReverse /guacamole http://localhost:8085/guacamole

RedirectMatch ^/$ https://guacamole.example.com <1>
----
<1> remplacer `example.com` par votre nom de domaine
.. Cliquez sur `Save`

=== Création des bases de données

Appliquez les opérations suivantes dans ISPConfig :

. Créez une base de données mysql. Aller dans le menu `Database` pour définir un utilisateur MariaDB
. Aller dans la rubrique `Sites`
.. Aller dans le menu `Database users` pour définir un utilisateur MariaDB
... Cliquez sur `Add new User` pour créer un nouvel utilisateur
... Saisissez les informations:
**** `Database user:` <-  saisir votre nom d'utilisateur `guacamole` par exemple
**** `Database password:` <- <<#pass_gen, Saisissez un mot de passe généré>> ou en générer un en cliquant sur le bouton
**** `Repeat Password:` <- saisir de nouveau le mot de passe
.. Cliquez sur `save`
.. Cliquez sur `Add new Database` pour créer une nouvelle base de données
.. Saisissez les informations:
*** `Site:` <- sélectionner le site `example.com`
*** `Database name:` <- Saisissez le nom de la base de données `guacamole`
*** `Database user:` <- Saisir ici le nom d'utilisateur créé: `cxguacamole`. x: est le numéro de client.
.. Cliquez sur `save`

=== Installation du Guacamole

Suivez la procédure suivante:

. <<#root_login, Loguez vous comme root sur le serveur>>
. Tapez:
+
[source,bash]
----
apt install gcc g++ libossp-uuid-dev libavcodec-dev libpango1.0-dev libssh2-1-dev libcairo2-dev libjpeg-dev libpng-dev libavutil-dev libavformat-dev libswscale-dev libvncserver-dev libssl-dev libvorbis-dev libwebp-dev freerdp2-dev libtelnet-dev libswscale-dev libossp-uuid-dev libwebsockets-dev libpulse-dev  mysql-java tomcat8 tomcat8-admin tomcat8-common tomcat8-user
----
. Sur Ubuntu, remplacer `mysql-java tomcat8 tomcat8-admin tomcat8-common tomcat8-user` par `libmariadb-java tomcat9 tomcat9-admin tomcat9-common tomcat9-user`
. Téléchargez la dernière version de Guacamole en allant sur le site web et en récupérant le https://guacamole.apache.org/releases/[lien de téléchargement].
. tapez:
+
[source,bash]
----
cd /tmp
curl -fSL -o guacamole-server.tar.gz 'http://apache.org/dyn/closer.cgi?action=download&filename=guacamole/1.2.0/source/guacamole-server-1.2.0.tar.gz' <1>
tar xfz guacamole-server.tar.gz
cd guacamole-server-*
----
<1> insérez ici l'adresse du package serveur à charger
. Lancez la configuration. Tapez:
+
[source,bash]
----
./configure --with-init-dir=/etc/init.d
----
. Vous devez obtenir, à la fin de la configuration, une table de ce type:
+
[source]
----
------------------------------------------------
guacamole-server version 1.2.0
------------------------------------------------

   Library status:

     freerdp2 ............ yes
     pango ............... yes
     libavcodec .......... yes
     libavformat.......... yes
     libavutil ........... yes
     libssh2 ............. yes
     libssl .............. yes
     libswscale .......... yes
     libtelnet ........... yes
     libVNCServer ........ yes
     libvorbis ........... yes
     libpulse ............ yes
     libwebsockets ....... yes
     libwebp ............. yes
     wsock32 ............. no

   Protocol support:

      Kubernetes .... yes
      RDP ........... yes
      SSH ........... yes
      Telnet ........ yes
      VNC ........... yes

   Services / tools:

      guacd ...... yes
      guacenc .... yes
      guaclog .... yes
----
. Si ce n'est pas le cas, c'est qu'une bibliothèque n'est pas installée correctement.
. Lancez la compilation et l'installation. Tapez:
+
[source,bash]
----
make
make install
ldconfig
----
. Activez le démon de gestion guacd. Tapez:
+
[source,bash]
----
systemctl daemon-reload
systemctl enable guacd
systemctl start guacd
----
. Téléchargez le dernier client `war` de Guacamole en allant sur le site web et en récupérant le https://guacamole.apache.org/releases/[lien de téléchargement]. Récupérez le lien puis tapez:
+
[source,bash]
----
mkdir -p /usr/local/share/guacamole
cd /usr/local/share/guacamole
curl -fSL -o guacamole.war 'http://apache.org/dyn/closer.cgi?action=download&filename=guacamole/1.2.0/binary/guacamole-1.2.0.war' <1>
ln -s /usr/local/share/guacamole/guacamole.war /var/lib/tomcat8/webapps/ <2>
systemctl restart tomcat8 <2>
systemctl restart guacd
----
<1> insérez ici l'adresse du war à charger
<2> ou tomcat9 pour Ubuntu
. Editez le fichier server.xml. Tapez:
+
[source,bash]
----
vi /etc/tomcat8/server.xml <1>
----
<1> ou tomcat9 pour Ubuntu
. Chercher `Connector port="8080" protocol="HTTP/1.1` et remplacer partout le port `8080` par `8085`
. Créez les répertoires de configuration de guacamole. Tapez:
+
[source,bash]
----
mkdir -p /etc/guacamole
mkdir -p /etc/guacamole/{extensions,lib}
----
. Récupérez le driver mysql/mariadb pour java. Sur la plupart des Linux, il est présent dans `/usr/share/java`. Pour le copier, tapez:
+
[source,bash]
----
ln -s /usr/share/java/mysql-connector-java.jar /etc/guacamole/lib/
----
. Il se peut que ce driver ne soit pas présent: allez sur le site https://dev.mysql.com/downloads/connector/j/[Mysql] et téléchargez la version Platform independant. Tapez:
+
[source,bash]
----
curl -fSL -o mysql-java.tar.gz 'https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-8.0.21.tar.gz' <1>
tar xfz mysql-java.tar.gz
cd mysql-connector-java-*
cp mysql-connector-java-*.jar /etc/guacamole/lib/mysql-connector-java.jar
----
<1> Collez ici le lien récupéré sur le site de Mysql. 
. Editez le fichier guacamole.properties. Tapez:
+
[source,bash]
----
vi /etc/guacamole/guacamole.properties
----
. Ajoutez dans le fichier:
+
[source]
----
mysql-hostname: localhost
mysql-port: 3306
mysql-database: cxguacamole <1>
mysql-username: cxguacamole <1>
mysql-password: <mot_de_passe> <1>
----
<1> mettez ici le nom de la base de données, le nom de l'utilisateur de la base et son mot_de_passe tels qu'ils ont été saisis dans le chapitre de création de la base de données.
. Vous devez maintenant télécharger les plugins mysql pour Guacamole. Allez sur le site web de guacamole et récupérez le https://guacamole.apache.org/releases/[lien de téléchargement de guacamole-auth-jdbc]. Tapez:
+
[source,bash]
----
cd /tmp
curl -fSL -o guacamole-auth-jdbc.tar.gz 'http://apache.org/dyn/closer.cgi?action=download&filename=guacamole/1.2.0/binary/guacamole-auth-jdbc-1.2.0.tar.gz' <1>
tar xfz guacamole-auth-jdbc.tar.gz
cd guacamole-auth-jdbc-*/mysql
cp guacamole-auth-jdbc-mysql-*.jar /usr/local/share/guacamole/
ln -s /usr/local/share/guacamole/guacamole-auth-jdbc-mysql-*.jar /etc/guacamole/extensions
----
<1> insérez ici l'adresse du fichier guacamole-auth-jdbc à charger
. Créez les tables de la base:
+
[source,bash]
----
cd schema
cat *.sql | mysql -u cxguacamole -p cxguacamole <1>
----
<1> mettez derrière le `-u` le nom d'utilisateur de la base de données et derrière le `-p` le nom de la base de données. Un mot de passe vous sera demandé.
. Redémarrez tomcat et guacd. Tapez:
+
[source,bash]
----
systemctl restart tomcat8 <1>
systemctl restart guacd
----
<1> ou mettre tomcat9 pour Ubuntu
. Allez sur le site de `guacamole.example.com/guacamole`
. Loguez vous avec le compte: `guacadmin` et password: `guacadmin`
. Commencez par cliquez sur `guacadmin` -> `paramètres` -> `utilisateurs`-> `Nouvel Utilisateur`
** `Identifiant` <- Tapez `admin`
** `Mot de passe` <- Tapez votre <<#pass_gen,mot de passe généré>>
** `Répétez mot de passe` <- Retapez votre mot de passe
** `Permissions` <- activer toutes les options
. Deconnectez vous et reconnectez vous avec le login `admin`
. cliquez sur `admin` -> `paramètres` -> `utilisateurs` -> `guacadmin`
. Supprimez ce compte utilisateur
. Si vous avez activé VNC. Cliquez sur `Admin` -> `Paramètres` -> `Utilisateurs` -> `Connexions` -> `Nouvelle Connexion`
** `Nom` <- Tapez `Local server VNC`
** `Protocole` <- Sélectionnez `VNC`
** `Paramètres` -> `Nom d’hôte` <- Tapez `Localhost`

** Cochez `SFTP` -> `Activer SFTP`
** `SFTP` -> `Nom d'hôte` <- Tapez `Localhost`
** `Paramètres` -> `port` <- Tapez `5900`
** `Paramètres` -> `Mot de passe` <- Tapez votre mot de passe VNC de votre machine locale.
** `SFTP` -> `Mot de passe` <- Tapez un mot de passe sur votre Hôte
. Cliquez sur `Admin` -> `Paramètres` -> `Utilisateurs` -> `Connexions` -> `Nouvelle Connexion`
** `Nom` <- Tapez `Local server SSH`
** `Protocole` <- Sélectionnez `SSH`
** `Paramètres` -> `Nom d’hôte` <- Tapez `Localhost`
** `Paramètres` -> `port` <- Tapez `22`
** `Paramètres` -> `Identifiant` <- Tapez un login sur votre Hôte
** `Paramètres` -> `Mot de passe` <- Tapez votre mot de passe de compte
** Cochez `SFTP` -> `Activer SFTP`
** `SFTP` -> `File browser root directory` <- Tapez `/`
. Vous pouvez maintenant vérifier vos connexions en vous loguant avec l'un des deux profils.
. l'appui simultané sur `SHIFT` `CTRL` `ALT` fait apparaître un menu pour effectuer des chargements de fichiers ou contrôler votre connexion

=== Upgrade de Guacamole

Il est nécessaire de regénérer les logiciels avec les dernières versions.

Appliquez la procédure suivante:

. <<#root_login, Loguez vous comme root sur le serveur>>
. Arrêtez le serveur guacamole
+
[source,bash]
----
systemctl stop guacd

----
. Téléchargez la dernière version de Guacamole en allant sur le site web et en récupérant le https://guacamole.apache.org/releases/[lien de téléchargement].
. tapez:
+
[source,bash]
----
cd /tmp
curl -fSL -o guacamole-server.tar.gz 'http://apache.org/dyn/closer.cgi?action=download&filename=guacamole/1.2.0/source/guacamole-server-1.2.0.tar.gz' <1>
tar xfz guacamole-server.tar.gz
cd guacamole-server-*
----
<1> insérez ici l'adresse du package serveur à charger
. Lancez la configuration. Tapez:
+
[source,bash]
----
./configure --with-init-dir=/etc/init.d
----
. Lancez la compilation et l'installation. Tapez:
+
[source,bash]
----
make
make install
ldconfig
----
. Téléchargez le dernier client `war` de Guacamole en allant sur le site web et en récupérant le https://guacamole.apache.org/releases/[lien de téléchargement]. Récupérez le lien puis tapez:
+
[source,bash]
----
cd /usr/local/share/guacamole
curl -fSL -o guacamole.war 'http://apache.org/dyn/closer.cgi?action=download&filename=guacamole/1.2.0/binary/guacamole-1.2.0.war' <1>
systemctl daemon-reload
systemctl restart tomcat8 <2>
systemctl start guacd
----
<1> insérez ici l'adresse du war à charger
<2> ou tomcat9 pour Ubuntu
. Allez sur le site de `guacamole.example.com/guacamole`
. Vérifiez que tout fonctionne
