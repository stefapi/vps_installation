== Surveillance du serveur avec Munin et Monit

=== Note préliminaire

Installez tout d'abord les paquets indispensables pour faire fonctionner Munin avec Apache puis activez le module fcgid:

[source,bash]
----
apt-get install apache2 libcgi-fast-perl libapache2-mod-fcgid
a2enmod fcgid
----

=== Installation et configuration de Munin

Suivez les étapes ci-après:

. Installer le paquet Munin:
+
[source,bash]
----
apt-get install munin munin-node munin-plugins-extra logtail libcache-cache-perl
----
. Votre configuration de Munin va utiliser une base de données MariaDB. Vous devez activer quelques plugins. Tapez:
+
[source,bash]
----
cd /etc/munin/plugins
ln -s /usr/share/munin/plugins/mysql_ mysql_
ln -s /usr/share/munin/plugins/mysql_bytes mysql_bytes
ln -s /usr/share/munin/plugins/mysql_innodb mysql_innodb
ln -s /usr/share/munin/plugins/mysql_isam_space_ mysql_isam_space_
ln -s /usr/share/munin/plugins/mysql_queries mysql_queries
ln -s /usr/share/munin/plugins/mysql_slowqueries mysql_slowqueries
ln -s /usr/share/munin/plugins/mysql_threads mysql_threads
----
. Créez la base de données MariaDB de Munin. Tapez:
+
[source,bash]
----
mysql -p
----
. Tapez le mot de passe mysql de root , puis dans mysql tapez:
+
[source,mysql]
----
CREATE SCHEMA munin_innodb;
USE munin_innodb
CREATE TABLE something (anything int) ENGINE=InnoDB;
GRANT SELECT ON munin_innodb.* TO 'munin'@'localhost' IDENTIFIED BY 'munin';
FLUSH PRIVILEGES;
EXIT;
----
. Editez ensuite le fichier de configuration de Munin. Tapez:
+
[source,bash]
----
vi /etc/munin/munin.conf
----
. Décommentez les lignes débutant par: `dbdir`, `htmldir`, `logdir`, `rundir`, and `tmpldir`. Les valeurs par défaut sont correctes.
. Munin utilisera l'adresse `munin.example.com`. Toujours dans le fichier de configuration de munin, remplacer la directive `[localhost.localdomain]` par `[munin.example.com]`.
. Un fois les commentaires enlevés et la ligne modifiée, le fichier de configuration doit ressembler à celui-ci:
+
----
# Example configuration file for Munin, generated by 'make build'
# The next three variables specifies where the location of the RRD
# databases, the HTML output, logs and the lock/pid files. They all
# must be writable by the user running munin-cron. They are all
# defaulted to the values you see here.
#
dbdir /var/lib/munin
htmldir /var/cache/munin/www
logdir /var/log/munin
rundir /var/run/munin
# Where to look for the HTML templates
#
tmpldir /etc/munin/templates
# Where to look for the static www files
#
#staticdir /etc/munin/static
# temporary cgi files are here. note that it has to be writable by
# the cgi user (usually nobody or httpd).
#
# cgitmpdir /var/lib/munin/cgi-tmp

# (Exactly one) directory to include all files from.
includedir /etc/munin/munin-conf.d
[...]
# a simple host tree
[munin.example.com] <1>
 address 127.0.0.1
 use_node_name yes
[...]
----
<1> mettre à la place de `example.com` votre nom de domaine
. Activez Munin dans Apache. Tapez:
+
[source,bash]
----
a2enconf munin
----
. Editez le fichier munin.conf d'Apache:
+
[source,bash]
----
vi /etc/apache2/conf-enabled/munin.conf
----
. Nous allons maintenant activer le module Munin dans Apache et définir une authentification basique. 
. Modifiez le fichier pour qu'il ressemble à celui ci-dessous:
+
[source,apache]
----
ScriptAlias /munin-cgi/munin-cgi-graph /usr/lib/munin/cgi/munin-cgi-graph
Alias /munin/static/ /var/cache/munin/www/static/

<Directory /var/cache/munin/www>
    Options FollowSymLinks SymLinksIfOwnerMatch
    AuthUserFile /etc/munin/munin-htpasswd
    AuthName "Munin"
    AuthType Basic
    Require valid-user

</Directory>

<Directory /usr/lib/munin/cgi>
    AuthUserFile /etc/munin/munin-htpasswd
    AuthName "Munin"
    AuthType Basic
    Require valid-user
    Options FollowSymLinks SymLinksIfOwnerMatch
    <IfModule mod_fcgid.c>
        SetHandler fcgid-script
    </IfModule>
    <IfModule !mod_fcgid.c>
        SetHandler cgi-script
    </IfModule>
</Directory>

# ***** SETTINGS FOR CGI/CRON STRATEGIES *****

# pick _one_ of the following lines depending on your "html_strategy"
# html_strategy: cron (default)
Alias /munin /var/cache/munin/www
# html_strategy: cgi (requires the apache module "cgid" or "fcgid")
#ScriptAlias /munin /usr/lib/munin/cgi/munin-cgi-html
----
. Créez ensuite le fichier de mot de passe de munin:
+
[source,bash]
----
htpasswd -c /etc/munin/munin-htpasswd admin
----
. Tapez <<#pass_gen, votre mot de passe généré>>
. Redémarrez apache. Tapez:
+
[source,bash]
----
service apache2 restart
----
. Redémarrez Munin. Tapez:
+
[source,bash]
----
service munin-node restart
----
. Attendez quelques minutes afin que Munin produise ses premiers fichiers de sortie. et allez ensuite sur l'URL: http://example.com/munin/.

=== Activez les plugins de Munin

Dans Debian 10, tous les plugins complémentaires sont déjà activés.Vous pouvez être tenté de vérifier:

. Pour vérifier que la configuration est correcte. Tapez:
+
[source,bash]
----
munin-node-configure --suggest
----
. Une liste de plugins doit s'afficher à l'écran. La colonne `used` indique que le plugins est activé. La colonne `Suggestions` indique que le serveur fait fonctionner un service qui peut être monitoré par ce module. Il faut créer un lien symbolique du module de `/usr/share/munin/plugins` dans `/etc/munin/plugins` pour l'activer.
. Par exemple pour activer les modules apache_*:
+
[source,bash]
----
cd /etc/munin/plugins
ln -s /usr/share/munin/plugins/apache_accesses
ln -s /usr/share/munin/plugins/apache_processes
ln -s /usr/share/munin/plugins/apache_volume
rm /usr/share/munin/plugins/mysql_
----
. Redémarrez ensuite le service Munin. Tapez: 
+
[source,bash]
----
service munin-node restart
----

=== Installer et configurer Monit

Pour installer et configurer Monit, vous devez appliquer la procédure suivante:

. Tapez:
+
[source,bash]
----
apt install monit
----
. Maintenant nous devons éditer le fichier `monitrc` qui définira les services que l'on souhaite monitorer. Il existe de nombreux exemples sur le web et vous pourrez trouver de nombreuses configuration sur http://mmonit.com/monit/documentation/.
. Changez la configuration de Monit. Tapez:
+
[source,bash]
----
vi /etc/monit/conf.d/monitrc.local
----
. Ajoutez dans le fichier cette configuration :
+
----
set daemon 60
set logfile syslog facility log_daemon
set mailserver localhost
set mail-format { from: monit@example.com } <2>
set alert nom@example.com <2>
set httpd port 2812 and
 SSL ENABLE
 PEMFILE /usr/local/ispconfig/interface/ssl/ispserver.pem
 allow admin:"my_password" <1>
----
<1> remplacez my_password par <<#pass_gen, votre mot de passe généré>>
<2> remplacer example.com par votre domaine et nom@example.com par votre email
. Activez les modules standards :
+
----
cd /etc/monit/conf-enabled
ln -s ../conf-available/apache2 .
ln -s ../conf-available/openssh-server .
ln -s ../conf-available/postfix .
ln -s ../conf-available/memcached .
----
. Créez ensuite un fichier pour Mariadb. Tapez:
+
[source,bash]
----
vi /etc/monit/conf-enabled/mariadb
----
. Ajoutez dans le fichier cette configuration :
+
----
 check process mysqld with pidfile /var/run/mysqld/mysqld.pid
   group database
   group mysql
   start program = "/etc/init.d/mariadb start"
   stop  program = "/etc/init.d/mariadb stop"
   if failed host localhost port 3306 protocol mysql with timeout 15 seconds for 3 times within 4 cycles then restart
   if failed unixsocket /var/run/mysqld/mysqld.sock protocol mysql for 3 times within 4 cycles then restart
   if 5 restarts with 5 cycles then timeout
   depend mysql_bin
   depend mysql_rc

 check file mysql_bin with path /usr/sbin/mysqld
   group mysql
   include /etc/monit/templates/rootbin

 check file mysql_rc with path /etc/init.d/mariadb
   group mysql
   include /etc/monit/templates/rootbin
----
. Créez ensuite un fichier pour Pureftpd. Tapez:
+
[source,bash]
----
vi /etc/monit/conf-enabled/pureftpd
----
. Ajoutez dans le fichier cette configuration :
+
----
check process pureftpd with pidfile /var/run/pure-ftpd/pure-ftpd.pid
 start program = "/usr/sbin/service pure-ftpd-mysql start"
 stop program = "/usr/sbin/service pure-ftpd-mysql stop"
 if failed port 21 protocol ftp then restart
 if 5 restarts within 5 cycles then timeout
----
. Créez ensuite un fichier pour named. Tapez:
+
[source,bash]
----
vi /etc/monit/conf-enabled/named
----
. Ajoutez dans le fichier cette configuration :
+
----
check process named with pidfile /var/run/named/named.pid
 start program = "/usr/sbin/service bind9 start"
 stop program = "/usr/sbin/service bind9 stop"
 if failed host 127.0.0.1 port 53 type tcp protocol dns then restart
 if failed host 127.0.0.1 port 53 type udp protocol dns then restart
 if 5 restarts within 5 cycles then timeout
----
. Créez ensuite un fichier pour ntpd. Tapez:
+
[source,bash]
----
vi /etc/monit/conf-enabled/ntpd
----
. Ajoutez dans le fichier cette configuration :
+
----
check process ntpd with pidfile /var/run/ntpd.pid
 start program = "/usr/sbin/service ntp start"
 stop program = "/usr/sbin/service ntp stop"
 if failed host 127.0.0.1 port 123 type udp then restart
 if 5 restarts within 5 cycles then timeout
----
. Créez ensuite un fichier pour dovecot. Tapez:
+
[source,bash]
----
vi /etc/monit/conf-enabled/dovecot
----
. Ajoutez dans le fichier cette configuration :
+
----
check process dovecot with pidfile /var/run/dovecot/master.pid
 group mail
 start program = "/usr/sbin/service dovecot start"
 stop program = "/usr/sbin/service dovecot stop"
 if failed host localhost port 993 type tcpssl sslauto protocol imap then restart
 if 5 restarts within 5 cycles then timeout
----

. La configuration est assez claire à lire. pour obtenir des précisions, référez vous à la documentation de monit http://mmonit.com/monit/documentation/monit.html.
. Redémarrez apache. Tapez:
+
[source,bash]
----
service apache2 restart
----
. Dans la configuration pour apache, la configuration indique que monit doit allez chercher sur le port 80 un fichier dans `/monit/token`. Nous devons donc créer ce fichier. Tapez:
+
[source,bash]
----
mkdir /var/www/html/monit
echo "hello" > /var/www/html/monit/token
----
. Tapez :
+
[source,bash]
----
service monit restart
----
. Pour monitorer le statut des process en ligne de commande, tapez:
+
[source,bash]
----
monit status
----
. <<#firewall, Debloquez le port 2812 sur votre firewall>>
. Maintenant naviguez sur le site https://example.com:2812/
. Rentrez le login `admin` et votre mot de passe `my_password`. Monit affiche alors les informations de monitoring du serveur.
